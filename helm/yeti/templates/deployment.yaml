apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "yeti.fullname" . }}
  labels:
    {{- include "yeti.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "yeti.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "yeti.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "yeti.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - sh
            - -c
          args:
            - exec /app/api-server serve -c /conf/config.yaml
          ports:
            - name: http
              containerPort: 7777
              protocol: TCP
          envFrom:
            - secretRef:
                name: {{ include "yeti.envname" . }}
          env:
            - name: yeti_SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if .Values.postgresql.passwordExistingSecretName }}
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.passwordExistingSecretName | quote }}
                  key: {{ .Values.postgresql.passwordExistingSecretKey | quote }}
            {{- end }}
            {{- if .Values.s3.accessKeyExistingSecretName }}
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.s3.accessKeyExistingSecretName | quote }}
                  key: {{ .Values.s3.accessKeyExistingSecretKey | quote }}
            {{- end }}
            {{- if .Values.s3.secretKeyExistingSecretName }}
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.s3.secretKeyExistingSecretName | quote }}
                  key: {{ .Values.s3.secretKeyExistingSecretKey | quote }}
            {{- end }}
            - name: yeti_DONOT_TRACK
              value: {{ .Values.doNotTrack | quote }}
          livenessProbe:
            failureThreshold: 15
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
            httpGet:
              path: /
              port: http
          readinessProbe:
            failureThreshold: 60
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          stdin: true
          tty: true
          volumeMounts:
            - mountPath: /conf
              name: config
              readOnly: true
            {{- if .Values.enableHostTimeZone }}
            - mountPath: /etc/localtime
              name: host-timezone
              readOnly: true
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.enableHostTimeZone }}
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-timezone
        {{- end }}
        - name: config
          secret:
            secretName: {{ include "yeti.fullname" . }}
